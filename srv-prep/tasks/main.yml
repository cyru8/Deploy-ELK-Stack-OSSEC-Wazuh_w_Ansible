---
# -name: Install a list of packages to prepared Linux Server

- name: Check if EPEL repo is already configured.
  stat: path={{ epel_repofile_path }}
  register: epel_repofile_result

- name: Install EPEL repo.
  yum:
    name: "{{ epel_repo_url }}"
    state: present
  register: result
  until: 'result.rc == 0'
  retries: 5
  delay: 10
  when: not epel_repofile_result.stat.exists

- name: Import EPEL GPG key.
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present
  when: not epel_repofile_result.stat.exists
  ignore_errors: "{{ ansible_check_mode }}"

#- name: upgrade all packages
#  yum: name=* state=latest

#- name: Check for reboot hint.
#  shell: LAST_KERNEL=$(rpm -q --last kernel | awk 'NR==1{sub(/kernel-/,""); print $1}'); CURRENT_KERNEL=$(uname -r); if [ $LAST_KERNEL != $CURRENT_KERNEL ]; then echo 'reboot'; else echo 'no'; fi
#  ignore_errors: true
#  register: reboot_hint

#- name: Rebooting ...
#  command: shutdown -r now "Reboot required for updated kernel"
#  async: 0
#  poll: 0
#  sudo: true
#  ignore_errors: true
#  when: reboot_hint.stdout.find("reboot") != -1
#  register: rebooting

#- name: Wait for thing to reboot...
#  pause: seconds=45
#  when: rebooting|changed

- name: Install a list of packages to prepared Linux Server
  yum:
    name:
      - epel-release
      - libselinux-python
      - vim
      - htop
      - tmux
      - wget
      - ntp
      - chrony
      - net-tools
      - git
      - net-tools
      - httpd-tools
    state: present
  become: true

- name: delegate to SELINUX handling subtask, if necessary
  include: set-selinux.yml
  when: nginx_in_selinux is defined and nginx_in_selinux == true

- name: copying ntp.conf file with owner and permissions
  copy:
    src: ntp.conf
    dest: /etc/ntp.conf
  become: true

- name: Add repository
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
  become: true
# Force all Handlers to run
- meta: flush_handlers

